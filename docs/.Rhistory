theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=8), legend.position = "right")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(alpha = 0.6)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=1) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=12), legend.position = "right")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(alpha = 0.6)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=1) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position = "right")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(alpha = 0.6)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=1) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(alpha = 0.6)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(alpha = 0.6)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14)) +
scale_fill_brewer(palette = "Pastel2")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.6)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5, alpha=0.8) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", alpha=0.8, se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14)) +
guides(fill="none")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress Levels", x = "Age", y = "Distress Level") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age", y = "Distress") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
set.seed(241) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(0.9)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
set.seed(241) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(0.5)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
set.seed(241) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(0.1)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
# Let's create some fake data for a variable called distress and we can pretend it's a distress scale score.
set.seed(241) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(0.1)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
# Let's create some fake data for a variable called distress and we can pretend it's a distress scale score.
set.seed(241) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))/(0.1)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))/(0.1)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
set.seed(241) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))/(2)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))/(100)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(100)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
set.seed(3) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))/(2)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
set.seed(3) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(8)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(0.005)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
# Let's create some fake data for a variable called distress and we can pretend it's a distress scale score.
set.seed(5501) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(0.005)*age) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(0.05)*(1/age)) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
set.seed(5501) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(5)*(1/age)) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
?geom_smooth
set.seed(5501) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(5)*(1/age)) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "gam", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
?gam
set.seed(5501) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(5*(1/age)) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(5*(1/age)) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
set.seed(5501) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
# Let's create some fake data for a variable called distress and we can pretend it's a distress scale score.
set.seed(5501) # Set.seed used in the context of a random number generator ensures that we produce the same set of numbers every time when we use this particular seed. This is important for reproducibility; this allows you and I to view the same data when running this code despite using a random number generator.
df <- df %>%
mutate(distress = (rnorm(n=29, mean=15, sd=3))*(5*(1/age))) # Here we create the variable using RNG drawing from a normal distribution with assigned parameters however, I have also included some math at the end to ensure that there is some association between the two variables.
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14), legend.position="none")
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color="red", alpha = 0.8, fill=position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color=position_category, alpha = 0.8, fill=position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color=position_category, alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))
df %>%
ggplot(., aes(x = age, y = distress)) +
geom_point(aes(color=position_category, alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size=0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size=14))  +
guides(fill=guide_legend(title="Position"))
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category, alpha = 0.8)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
guides(color = guide_legend(title = "Position"))
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category), alpha = 0.8, show.legend = FALSE) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
guides(color = guide_legend(title = "Position"))
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category), alpha = 0.8) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category), alpha = 0.8) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category), alpha = 0.8) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_fill_brewer(palette = "Pastel2") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category), alpha = 0.8) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Pastel2") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category), alpha = 0.8) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Pastel1") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category), alpha = 1) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Pastel1") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Pastel1") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Pastel2") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Set3") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Set2") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Accent") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Paired") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Spectral") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
guides(color = guide_legend(title = "Position"), alpha = "none")
scale_color_brewer(palette = "Spectral") +
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Spectral") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Spectral") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Dark2") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(x = age, y = distress)) +
geom_point(aes(color = position_category)) +
geom_smooth(method = "lm", color = "blue", se = TRUE, linetype = "dashed", size = 0.5, alpha=0.2) +
labs(title = "Relationship between Age and Distress", x = "Age (years)", y = "Distress score") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14)) +
scale_color_brewer(palette = "Set1") +
guides(color = guide_legend(title = "Position"), alpha = "none")
df %>%
ggplot(aes(age)) +
geom_boxplot(fill = "steelblue", color = "darkblue", outlier.color = "red", outlier.shape = 16, outlier.size = 2, alpha = 0.5) +
geom_jitter(width = 0.2, color = "darkblue", alpha = 0.4) +
geom_vline(aes(xintercept = mean(age, na.rm = TRUE)), linetype = 'dashed', color = 'red') +
annotate(x=38.9, y=0.001, label="Mean", geom="text", color="red") +
labs(y = "", x = "Age (years)", title = "Distribution of age within sample", subtitle = "All positions") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5, face="italic"), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks=element_blank()) +
coord_flip()
df %>%
ggplot(aes(age, "")) +
geom_boxplot(fill = "steelblue", color = "darkblue", outlier.color = "red", outlier.shape = 16, outlier.size = 2, alpha = 0.5) +
geom_jitter(width = 0.2, color = "darkblue", alpha = 0.4) +
geom_vline(aes(xintercept = mean(age, na.rm = TRUE)), linetype = 'dashed', color = 'red') +
annotate(x=38.9, y=1, label="Mean", geom="text", color="red") + # We also need to adjust the positioning of our geom_vline label since we have called a 'y' value and this changes the scaling.
labs(y = "", x = "Age (years)", title = "Distribution of age within sample", subtitle = "All positions") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5, face="italic"), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks=element_blank()) +
coord_flip() # We recieve a warning message here because 2 of our respondents do not have an age value/it appears as NA.
